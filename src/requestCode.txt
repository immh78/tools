overTimePay = [
    [
        "202506",
        160000
    ],
    [
        "202507",
        561472
    ]
]

첫번째 컬럼값으로 내림차순 정렬

overTimePay = {
    "202506": 160000,
    "202507": 561472
}

overTimePay로 v-timeline을 월별로 출력되도록 하려 한다.
overTimePay를 Array로 변경.
년월을 "2025년 6월: 포멧으로 변경
초과근무수당을 1000단위로 ,표시


<v-timeline side="end">
                <v-timeline-item
                v-for="item in items"
                :key="item.id"
                :dot-color="item.color"
                size="small"
                >
                <v-alert
                    :color="item.color"
                    :icon="item.icon"
                    :value="true"
                >
                    Lorem ipsum dolor sit amet, no nam oblique veritus. Commune scaevola imperdiet nec ut, sed euismod convenire principes at. Est et nobis iisque percipit, an vim zril disputando voluptatibus, vix an salutandi sententiae.
                </v-alert>
                </v-timeline-item>
            </v-timeline>




tax = {
    "payment": {
        "202404": [
            {
                "amount": 100,
                "category": "재산세",
                "date": 20250711,
                "target": "청주"
            },
            {
                "amount": 200,
                "category": "주민세",
                "date": 20250711,
                "target": "청주"
            }

        ],
        "202507": [
            {
                "amount": 238400,
                "category": "재산세",
                "date": "20250722",
                "target": "청주"
            },
            {
                "amount": 149650,
                "category": "재산세",
                "date": "20250722",
                "target": "대구"
            }
        ]
    },
    "target": [
        "청주",
        "대구",
        "음성",
        "용산"
    ]
}

tax.payment에 "202507"에서 첫번째 index값을 삭제하려면?

payment 변수를 구성하려고 한다.
tax.target 변수가 모두 포함되어야 한다.
만약 tax.target에는 있는데 tax.payment가 없다면 target category를 "미납부"로 입력한다.
payment는 년월 key값 하위로 구성된다.
payment의 속성은 target, resTaxAmount, propTaxAmount, key이며 resTexAmount는 주민세, propTaxAmount는 재산세이다 key값은 각 월변수의 key값 index이다.



vue.js로 개발한다.
월별로 납부 세금 목록을 출력하는 프로그램을 작성.
조건으로 받은 월을 출력시 target에 대해서 payment가 없더라도 빈 행으로 출력한다.
vuetify의 data table을 이용한다.

출력 2025년 7월 예)
지역    구분     금액
----------------------
청주    재산세   238,400원
대구    재산세   149,650원




payment = {
    "202404": [
        {
            "amount": 100,
            "category": "재산세",
            "date": 20250711,
            "target": "청주"
        }
    ],
    "202507": [
        {
            "amount": 238400,
            "category": "재산세",
            "date": "20250722",
            "target": "청주"
        },
        {
            "amount": 149650,
            "category": "재산세",
            "date": "20250722",
            "target": "대구"
        }
    ]
}


배열의 값을 역순으로 정렬

month = [
    "202507",
    "202404"
]

                                <td><v-btn @click="openTaxPopup(mm, item)">{{ item.target }}</v-btn></td>
                                <td v-if="item.propTaxAmount > 0">{{ item.propTaxAmount }}</td>
                                <td v-else colspan="2" align="center">미납부</td>
                                <td v-if="item.propTaxAmount > 0">{{ item.resTaxAmount }}</td>

item.propTaxAmount는 Number변수이다. 값이 1000단위마다 ,를 추가



                <tbody class="ma-2">
                    <tr>
                        <td><v-text-field v-model="taxItem.propTaxAmount" label="재산세" type="number" clearable variant="outlined"/>
                        </td>
                        <td><v-btn @click="saveTax('prop')" icon="mdi-content-save" variant="text"/></td>
                    </tr>
                    <tr>
                        <td><v-text-field v-model="taxItem.resTaxAmount" label="주민세" type="number" clearable variant="outlined"/></td>
                        <td><v-btn @click="saveTax('res')" icon="mdi-content-save" variant="text"/></td>
                    </tr>
                </tbody>

btn이 행의 중앙에 위치하도록